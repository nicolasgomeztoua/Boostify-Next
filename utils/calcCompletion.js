const rankBoostTimes = [
  0.1, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682, 0.29268292682,
  0.29268292682, 0.29268292682, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838,
  0.77419354838, 0.77419354838, 0.77419354838, 0.77419354838, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333, 1.33333333333,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
  1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
];

const calcRankBoostTime = (firstValue, secondValue) => {
  const timeArray = rankBoostTimes.slice(
    Math.floor(firstValue / 100),
    Math.floor(secondValue / 100 + 1)
  );
  const summedTime = timeArray.reduce((a, b) => a + b, 0);
  return summedTime;
};

const calcBadgesTime = (popBadges, otherBadges) => {
  console.log(popBadges, otherBadges);
  let totalHours = 0;
};

function SplitTime(numberOfHours) {
  const Days = Math.floor(numberOfHours / 24);
  const Remainder = numberOfHours % 24;
  const Hours = Math.floor(Remainder);

  if (Days <= 0) {
    return `${Hours} Hours`;
  } else {
    return `${Days} Day/s`;
  }
}

export const calcCompletion = (boostType, firstValue = 0, secondValue = 0) => {
  switch (boostType) {
    case "RankBoost":
      return SplitTime(calcRankBoostTime(firstValue, secondValue));
    case "Badges":
      return calcBadgesTime(firstValue, secondValue);
    case "ArenasBoost":
      return " < 24h";
    case "KillsBoost":
    default:
      return "sussy";
  }
};
